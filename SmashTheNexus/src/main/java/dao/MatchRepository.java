package dao;

import java.sql.Connection;
import java.sql.Date;
import java.sql.SQLException;

import dao.mappers.MatchMapper;
import domain.model.Match;

public class MatchRepository extends RepositoryBase<Match> {

	public MatchRepository(Connection connection, MatchMapper mapper, IRepository<Match> matchRepo) {
		super(connection, mapper);
		mapper.setMatchRepo(matchRepo);
	}

	@Override
	protected void setInsert(Match entity) throws SQLException {
		insert.setDate(1, (Date) entity.getDate());
		insert.setString(2, entity.getFirstTeam());
		insert.setString(3, entity.getSecondTeam());
		insert.setString(4, entity.getResult());
		insert.setInt(5, entity.getBestOf());

	}

	@Override
	protected void setUpdate(Match entity) throws SQLException {
		update.setDate(1, (Date) entity.getDate());
		update.setString(2, entity.getFirstTeam());
		update.setString(3, entity.getSecondTeam());
		update.setString(4, entity.getResult());
		update.setInt(5, entity.getBestOf());
	}

	@Override
	protected String tableName() {
		return "match";
	}

	@Override
	protected String createTableSql() {
		return "CREATE TABLE match(" + "id bigint GENERATED BY DEFAULT AS IDENTITY," + "match_date date,"
				+ "first_team varchar(50)," + "second_team varchar(50)," + "result VARCHAR(20)," + "best_of int," + ")";
	}

	@Override
	protected String insertSql() {
		return "INSERT INTO match(match_date,first_team,second_team,result,best_of) VALUES(?,?,?,?,?)";
	}

	@Override
	protected String updateSql() {
		return "UPDATE match set match_date=?,first_team=?,second_team=?,result=?,best_of=? WHERE id=?";
	}

}
