package dao;

import java.sql.Connection;
import java.sql.Date;
import java.sql.SQLException;

import dao.mappers.IMapResultSetIntoEntity;
import dao.uow.IUnitOfWork;
import domain.model.Match;
import domain.model.Team;

public class MatchRepository extends RepositoryBase<Match> implements IMatchRepository {

	private TeamRepository repo;

	public MatchRepository(Connection connection, IMapResultSetIntoEntity<Match> mapper, IUnitOfWork uow) {
		super(connection, mapper, uow);
	}

	@Override
	protected void setInsert(Match entity) throws SQLException {
		insert.setDate(1, (Date) entity.getDate());
		insert.setInt(2, entity.getFirstTeamId());
		insert.setInt(3, entity.getSecondTeamId());
		insert.setString(4, entity.getResult());
		insert.setInt(5, entity.getBestOf());

	}

	@Override
	protected void setUpdate(Match entity) throws SQLException {
		update.setDate(1, (Date) entity.getDate());
		update.setInt(2, entity.getFirstTeamId());
		update.setInt(3, entity.getSecondTeamId());
		update.setString(4, entity.getResult());
		update.setInt(5, entity.getBestOf());
	}

	@Override
	protected String tableName() {
		return "match";
	}

	@Override
	protected String createTableSql() {
		return "CREATE TABLE match(" + "id bigint GENERATED BY DEFAULT AS IDENTITY," + "match_date date,"
				+ "first_team_ID int," + "second_team_ID int," + "result VARCHAR(20)," + "best_of int" + ")";
	}

	@Override
	protected String insertSql() {
		return "INSERT INTO match(match_date,first_team_ID,second_team_ID,result,best_of) VALUES(?,?,?,?,?)";
	}

	@Override
	protected String updateSql() {
		return "UPDATE match set match_date=?,first_team_ID=?,second_team_ID=?,result=?,best_of=? WHERE id=?";
	}

	public void fillwithTeams(Match matchWithoutTeams) {

		Team t1 = repo.get(matchWithoutTeams.getFirstTeamId());
		Team t2 = repo.get(matchWithoutTeams.getSecondTeamId());
		matchWithoutTeams.setFirstTeam(t1);
		matchWithoutTeams.setSecondTeam(t2);

	}

}
